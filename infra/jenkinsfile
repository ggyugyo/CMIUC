pipeline {
    agent any
    
    environment {
        DOCKERCOMPOSE_FILE = "infra/Dockercompose"
    }
    
    stages {
        stage("Checkout") {
            steps {
                script {
                    git credentialsId: env.CREDENTIALSID, url: env.URL, branch: "master"
                }
            }
        }
        
        stage("Delete old frontend") {
            steps {
                sh "docker rm -f ${env.FRONT_CONTAINER}"
                sh "docker rmi -f ${env.FRONT_IMAGE}"
            }
        }
        
        stage("Delete old backend") {
            steps {
                sh "docker rm -f ${env.BACK_CONTAINER}"
                sh "docker rmi -f ${env.BACK_IMAGE}"
            }
        }
        
        stage("Deploy") {
            steps {
                script {
                    sh "docker-compose -f ${DOCKERCOMPOSE_FILE} up -d --build"
                }
            }
        }
    }

    post {
        success {
            script {
                mattermostSend color: 'good', message: "배포 성공입니당나귀~. ${env.COMMUNICATION_URL}"
            }
        }
        failure {
            script {
                mattermostSend color: 'danger', message: "배포 실패입니다람쥐ㅠㅠ. ${env.COMMUNICATION_URL}"
            }
        }
    }
}
